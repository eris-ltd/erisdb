// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpcquery.proto

package rpcquery

import (
	context "context"
	fmt "fmt"
	math "math"
	math_bits "math/bits"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	acm "github.com/hyperledger/burrow/acm"
	validator "github.com/hyperledger/burrow/acm/validator"
	github_com_hyperledger_burrow_binary "github.com/hyperledger/burrow/binary"
	github_com_hyperledger_burrow_crypto "github.com/hyperledger/burrow/crypto"
	names "github.com/hyperledger/burrow/execution/names"
	registry "github.com/hyperledger/burrow/execution/registry"
	rpc "github.com/hyperledger/burrow/rpc"
	payload "github.com/hyperledger/burrow/txs/payload"
	_ "github.com/tendermint/tendermint/abci/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StatusParam struct {
	BlockTimeWithin      string   `protobuf:"bytes,1,opt,name=BlockTimeWithin,proto3" json:"BlockTimeWithin,omitempty"`
	BlockSeenTimeWithin  string   `protobuf:"bytes,2,opt,name=BlockSeenTimeWithin,proto3" json:"BlockSeenTimeWithin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusParam) Reset()         { *m = StatusParam{} }
func (m *StatusParam) String() string { return proto.CompactTextString(m) }
func (*StatusParam) ProtoMessage()    {}
func (*StatusParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{0}
}
func (m *StatusParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusParam.Unmarshal(m, b)
}
func (m *StatusParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusParam.Marshal(b, m, deterministic)
}
func (m *StatusParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusParam.Merge(m, src)
}
func (m *StatusParam) XXX_Size() int {
	return xxx_messageInfo_StatusParam.Size(m)
}
func (m *StatusParam) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusParam.DiscardUnknown(m)
}

var xxx_messageInfo_StatusParam proto.InternalMessageInfo

func (m *StatusParam) GetBlockTimeWithin() string {
	if m != nil {
		return m.BlockTimeWithin
	}
	return ""
}

func (m *StatusParam) GetBlockSeenTimeWithin() string {
	if m != nil {
		return m.BlockSeenTimeWithin
	}
	return ""
}

func (*StatusParam) XXX_MessageName() string {
	return "rpcquery.StatusParam"
}

type GetAccountParam struct {
	Address              github_com_hyperledger_burrow_crypto.Address `protobuf:"bytes,1,opt,name=Address,proto3,customtype=github.com/hyperledger/burrow/crypto.Address" json:"Address"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *GetAccountParam) Reset()         { *m = GetAccountParam{} }
func (m *GetAccountParam) String() string { return proto.CompactTextString(m) }
func (*GetAccountParam) ProtoMessage()    {}
func (*GetAccountParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{1}
}
func (m *GetAccountParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountParam.Unmarshal(m, b)
}
func (m *GetAccountParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountParam.Marshal(b, m, deterministic)
}
func (m *GetAccountParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountParam.Merge(m, src)
}
func (m *GetAccountParam) XXX_Size() int {
	return xxx_messageInfo_GetAccountParam.Size(m)
}
func (m *GetAccountParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountParam proto.InternalMessageInfo

func (*GetAccountParam) XXX_MessageName() string {
	return "rpcquery.GetAccountParam"
}

type GetMetadataParam struct {
	Address              *github_com_hyperledger_burrow_crypto.Address  `protobuf:"bytes,1,opt,name=Address,proto3,customtype=github.com/hyperledger/burrow/crypto.Address" json:"Address,omitempty"`
	MetadataHash         *github_com_hyperledger_burrow_binary.HexBytes `protobuf:"bytes,2,opt,name=MetadataHash,proto3,customtype=github.com/hyperledger/burrow/binary.HexBytes" json:"MetadataHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *GetMetadataParam) Reset()         { *m = GetMetadataParam{} }
func (m *GetMetadataParam) String() string { return proto.CompactTextString(m) }
func (*GetMetadataParam) ProtoMessage()    {}
func (*GetMetadataParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{2}
}
func (m *GetMetadataParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetadataParam.Unmarshal(m, b)
}
func (m *GetMetadataParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetadataParam.Marshal(b, m, deterministic)
}
func (m *GetMetadataParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetadataParam.Merge(m, src)
}
func (m *GetMetadataParam) XXX_Size() int {
	return xxx_messageInfo_GetMetadataParam.Size(m)
}
func (m *GetMetadataParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetadataParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetadataParam proto.InternalMessageInfo

func (*GetMetadataParam) XXX_MessageName() string {
	return "rpcquery.GetMetadataParam"
}

type MetadataResult struct {
	Metadata             string   `protobuf:"bytes,1,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataResult) Reset()         { *m = MetadataResult{} }
func (m *MetadataResult) String() string { return proto.CompactTextString(m) }
func (*MetadataResult) ProtoMessage()    {}
func (*MetadataResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{3}
}
func (m *MetadataResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataResult.Unmarshal(m, b)
}
func (m *MetadataResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataResult.Marshal(b, m, deterministic)
}
func (m *MetadataResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataResult.Merge(m, src)
}
func (m *MetadataResult) XXX_Size() int {
	return xxx_messageInfo_MetadataResult.Size(m)
}
func (m *MetadataResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataResult.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataResult proto.InternalMessageInfo

func (m *MetadataResult) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (*MetadataResult) XXX_MessageName() string {
	return "rpcquery.MetadataResult"
}

type GetStorageParam struct {
	Address              github_com_hyperledger_burrow_crypto.Address `protobuf:"bytes,1,opt,name=Address,proto3,customtype=github.com/hyperledger/burrow/crypto.Address" json:"Address"`
	Key                  github_com_hyperledger_burrow_binary.Word256 `protobuf:"bytes,2,opt,name=Key,proto3,customtype=github.com/hyperledger/burrow/binary.Word256" json:"Key"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *GetStorageParam) Reset()         { *m = GetStorageParam{} }
func (m *GetStorageParam) String() string { return proto.CompactTextString(m) }
func (*GetStorageParam) ProtoMessage()    {}
func (*GetStorageParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{4}
}
func (m *GetStorageParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStorageParam.Unmarshal(m, b)
}
func (m *GetStorageParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStorageParam.Marshal(b, m, deterministic)
}
func (m *GetStorageParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStorageParam.Merge(m, src)
}
func (m *GetStorageParam) XXX_Size() int {
	return xxx_messageInfo_GetStorageParam.Size(m)
}
func (m *GetStorageParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStorageParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetStorageParam proto.InternalMessageInfo

func (*GetStorageParam) XXX_MessageName() string {
	return "rpcquery.GetStorageParam"
}

type StorageValue struct {
	Value                github_com_hyperledger_burrow_binary.HexBytes `protobuf:"bytes,1,opt,name=Value,proto3,customtype=github.com/hyperledger/burrow/binary.HexBytes" json:"Value"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *StorageValue) Reset()         { *m = StorageValue{} }
func (m *StorageValue) String() string { return proto.CompactTextString(m) }
func (*StorageValue) ProtoMessage()    {}
func (*StorageValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{5}
}
func (m *StorageValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageValue.Unmarshal(m, b)
}
func (m *StorageValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageValue.Marshal(b, m, deterministic)
}
func (m *StorageValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageValue.Merge(m, src)
}
func (m *StorageValue) XXX_Size() int {
	return xxx_messageInfo_StorageValue.Size(m)
}
func (m *StorageValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageValue.DiscardUnknown(m)
}

var xxx_messageInfo_StorageValue proto.InternalMessageInfo

func (*StorageValue) XXX_MessageName() string {
	return "rpcquery.StorageValue"
}

type ListAccountsParam struct {
	Query                string   `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAccountsParam) Reset()         { *m = ListAccountsParam{} }
func (m *ListAccountsParam) String() string { return proto.CompactTextString(m) }
func (*ListAccountsParam) ProtoMessage()    {}
func (*ListAccountsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{6}
}
func (m *ListAccountsParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsParam.Unmarshal(m, b)
}
func (m *ListAccountsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsParam.Marshal(b, m, deterministic)
}
func (m *ListAccountsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsParam.Merge(m, src)
}
func (m *ListAccountsParam) XXX_Size() int {
	return xxx_messageInfo_ListAccountsParam.Size(m)
}
func (m *ListAccountsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsParam.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsParam proto.InternalMessageInfo

func (m *ListAccountsParam) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (*ListAccountsParam) XXX_MessageName() string {
	return "rpcquery.ListAccountsParam"
}

type GetNameParam struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameParam) Reset()         { *m = GetNameParam{} }
func (m *GetNameParam) String() string { return proto.CompactTextString(m) }
func (*GetNameParam) ProtoMessage()    {}
func (*GetNameParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{7}
}
func (m *GetNameParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameParam.Unmarshal(m, b)
}
func (m *GetNameParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameParam.Marshal(b, m, deterministic)
}
func (m *GetNameParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameParam.Merge(m, src)
}
func (m *GetNameParam) XXX_Size() int {
	return xxx_messageInfo_GetNameParam.Size(m)
}
func (m *GetNameParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameParam proto.InternalMessageInfo

func (m *GetNameParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (*GetNameParam) XXX_MessageName() string {
	return "rpcquery.GetNameParam"
}

type ListNamesParam struct {
	Query                string   `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNamesParam) Reset()         { *m = ListNamesParam{} }
func (m *ListNamesParam) String() string { return proto.CompactTextString(m) }
func (*ListNamesParam) ProtoMessage()    {}
func (*ListNamesParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{8}
}
func (m *ListNamesParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNamesParam.Unmarshal(m, b)
}
func (m *ListNamesParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNamesParam.Marshal(b, m, deterministic)
}
func (m *ListNamesParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNamesParam.Merge(m, src)
}
func (m *ListNamesParam) XXX_Size() int {
	return xxx_messageInfo_ListNamesParam.Size(m)
}
func (m *ListNamesParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNamesParam.DiscardUnknown(m)
}

var xxx_messageInfo_ListNamesParam proto.InternalMessageInfo

func (m *ListNamesParam) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (*ListNamesParam) XXX_MessageName() string {
	return "rpcquery.ListNamesParam"
}

type GetNetworkRegistryParam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkRegistryParam) Reset()         { *m = GetNetworkRegistryParam{} }
func (m *GetNetworkRegistryParam) String() string { return proto.CompactTextString(m) }
func (*GetNetworkRegistryParam) ProtoMessage()    {}
func (*GetNetworkRegistryParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{9}
}
func (m *GetNetworkRegistryParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkRegistryParam.Unmarshal(m, b)
}
func (m *GetNetworkRegistryParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkRegistryParam.Marshal(b, m, deterministic)
}
func (m *GetNetworkRegistryParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkRegistryParam.Merge(m, src)
}
func (m *GetNetworkRegistryParam) XXX_Size() int {
	return xxx_messageInfo_GetNetworkRegistryParam.Size(m)
}
func (m *GetNetworkRegistryParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkRegistryParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkRegistryParam proto.InternalMessageInfo

func (*GetNetworkRegistryParam) XXX_MessageName() string {
	return "rpcquery.GetNetworkRegistryParam"
}

type GetValidatorSetParam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValidatorSetParam) Reset()         { *m = GetValidatorSetParam{} }
func (m *GetValidatorSetParam) String() string { return proto.CompactTextString(m) }
func (*GetValidatorSetParam) ProtoMessage()    {}
func (*GetValidatorSetParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{10}
}
func (m *GetValidatorSetParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorSetParam.Unmarshal(m, b)
}
func (m *GetValidatorSetParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorSetParam.Marshal(b, m, deterministic)
}
func (m *GetValidatorSetParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorSetParam.Merge(m, src)
}
func (m *GetValidatorSetParam) XXX_Size() int {
	return xxx_messageInfo_GetValidatorSetParam.Size(m)
}
func (m *GetValidatorSetParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorSetParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorSetParam proto.InternalMessageInfo

func (*GetValidatorSetParam) XXX_MessageName() string {
	return "rpcquery.GetValidatorSetParam"
}

type GetValidatorSetHistoryParam struct {
	// Use -1 for all available history
	IncludePrevious      int64    `protobuf:"varint,1,opt,name=IncludePrevious,proto3" json:"IncludePrevious,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValidatorSetHistoryParam) Reset()         { *m = GetValidatorSetHistoryParam{} }
func (m *GetValidatorSetHistoryParam) String() string { return proto.CompactTextString(m) }
func (*GetValidatorSetHistoryParam) ProtoMessage()    {}
func (*GetValidatorSetHistoryParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{11}
}
func (m *GetValidatorSetHistoryParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorSetHistoryParam.Unmarshal(m, b)
}
func (m *GetValidatorSetHistoryParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorSetHistoryParam.Marshal(b, m, deterministic)
}
func (m *GetValidatorSetHistoryParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorSetHistoryParam.Merge(m, src)
}
func (m *GetValidatorSetHistoryParam) XXX_Size() int {
	return xxx_messageInfo_GetValidatorSetHistoryParam.Size(m)
}
func (m *GetValidatorSetHistoryParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorSetHistoryParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorSetHistoryParam proto.InternalMessageInfo

func (m *GetValidatorSetHistoryParam) GetIncludePrevious() int64 {
	if m != nil {
		return m.IncludePrevious
	}
	return 0
}

func (*GetValidatorSetHistoryParam) XXX_MessageName() string {
	return "rpcquery.GetValidatorSetHistoryParam"
}

type NetworkRegistry struct {
	Set                  []*RegisteredValidator `protobuf:"bytes,1,rep,name=Set,proto3" json:"Set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NetworkRegistry) Reset()         { *m = NetworkRegistry{} }
func (m *NetworkRegistry) String() string { return proto.CompactTextString(m) }
func (*NetworkRegistry) ProtoMessage()    {}
func (*NetworkRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{12}
}
func (m *NetworkRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkRegistry.Unmarshal(m, b)
}
func (m *NetworkRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkRegistry.Marshal(b, m, deterministic)
}
func (m *NetworkRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkRegistry.Merge(m, src)
}
func (m *NetworkRegistry) XXX_Size() int {
	return xxx_messageInfo_NetworkRegistry.Size(m)
}
func (m *NetworkRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkRegistry proto.InternalMessageInfo

func (m *NetworkRegistry) GetSet() []*RegisteredValidator {
	if m != nil {
		return m.Set
	}
	return nil
}

func (*NetworkRegistry) XXX_MessageName() string {
	return "rpcquery.NetworkRegistry"
}

type RegisteredValidator struct {
	Address              github_com_hyperledger_burrow_crypto.Address `protobuf:"bytes,1,opt,name=Address,proto3,customtype=github.com/hyperledger/burrow/crypto.Address" json:"Address"`
	Node                 *registry.NodeIdentity                       `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *RegisteredValidator) Reset()         { *m = RegisteredValidator{} }
func (m *RegisteredValidator) String() string { return proto.CompactTextString(m) }
func (*RegisteredValidator) ProtoMessage()    {}
func (*RegisteredValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{13}
}
func (m *RegisteredValidator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredValidator.Unmarshal(m, b)
}
func (m *RegisteredValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredValidator.Marshal(b, m, deterministic)
}
func (m *RegisteredValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredValidator.Merge(m, src)
}
func (m *RegisteredValidator) XXX_Size() int {
	return xxx_messageInfo_RegisteredValidator.Size(m)
}
func (m *RegisteredValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredValidator.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredValidator proto.InternalMessageInfo

func (m *RegisteredValidator) GetNode() *registry.NodeIdentity {
	if m != nil {
		return m.Node
	}
	return nil
}

func (*RegisteredValidator) XXX_MessageName() string {
	return "rpcquery.RegisteredValidator"
}

type ValidatorSetHistory struct {
	History              []*ValidatorSet `protobuf:"bytes,1,rep,name=History,proto3" json:"History,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ValidatorSetHistory) Reset()         { *m = ValidatorSetHistory{} }
func (m *ValidatorSetHistory) String() string { return proto.CompactTextString(m) }
func (*ValidatorSetHistory) ProtoMessage()    {}
func (*ValidatorSetHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{14}
}
func (m *ValidatorSetHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSetHistory.Unmarshal(m, b)
}
func (m *ValidatorSetHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSetHistory.Marshal(b, m, deterministic)
}
func (m *ValidatorSetHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSetHistory.Merge(m, src)
}
func (m *ValidatorSetHistory) XXX_Size() int {
	return xxx_messageInfo_ValidatorSetHistory.Size(m)
}
func (m *ValidatorSetHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSetHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSetHistory proto.InternalMessageInfo

func (m *ValidatorSetHistory) GetHistory() []*ValidatorSet {
	if m != nil {
		return m.History
	}
	return nil
}

func (*ValidatorSetHistory) XXX_MessageName() string {
	return "rpcquery.ValidatorSetHistory"
}

type ValidatorSet struct {
	Height               uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Set                  []*validator.Validator `protobuf:"bytes,2,rep,name=Set,proto3" json:"Set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ValidatorSet) Reset()         { *m = ValidatorSet{} }
func (m *ValidatorSet) String() string { return proto.CompactTextString(m) }
func (*ValidatorSet) ProtoMessage()    {}
func (*ValidatorSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{15}
}
func (m *ValidatorSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorSet.Unmarshal(m, b)
}
func (m *ValidatorSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorSet.Marshal(b, m, deterministic)
}
func (m *ValidatorSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorSet.Merge(m, src)
}
func (m *ValidatorSet) XXX_Size() int {
	return xxx_messageInfo_ValidatorSet.Size(m)
}
func (m *ValidatorSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorSet.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorSet proto.InternalMessageInfo

func (m *ValidatorSet) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ValidatorSet) GetSet() []*validator.Validator {
	if m != nil {
		return m.Set
	}
	return nil
}

func (*ValidatorSet) XXX_MessageName() string {
	return "rpcquery.ValidatorSet"
}

type GetProposalParam struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposalParam) Reset()         { *m = GetProposalParam{} }
func (m *GetProposalParam) String() string { return proto.CompactTextString(m) }
func (*GetProposalParam) ProtoMessage()    {}
func (*GetProposalParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{16}
}
func (m *GetProposalParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposalParam.Unmarshal(m, b)
}
func (m *GetProposalParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposalParam.Marshal(b, m, deterministic)
}
func (m *GetProposalParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposalParam.Merge(m, src)
}
func (m *GetProposalParam) XXX_Size() int {
	return xxx_messageInfo_GetProposalParam.Size(m)
}
func (m *GetProposalParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposalParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposalParam proto.InternalMessageInfo

func (m *GetProposalParam) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (*GetProposalParam) XXX_MessageName() string {
	return "rpcquery.GetProposalParam"
}

type ListProposalsParam struct {
	Proposed             bool     `protobuf:"varint,1,opt,name=Proposed,proto3" json:"Proposed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProposalsParam) Reset()         { *m = ListProposalsParam{} }
func (m *ListProposalsParam) String() string { return proto.CompactTextString(m) }
func (*ListProposalsParam) ProtoMessage()    {}
func (*ListProposalsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{17}
}
func (m *ListProposalsParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProposalsParam.Unmarshal(m, b)
}
func (m *ListProposalsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProposalsParam.Marshal(b, m, deterministic)
}
func (m *ListProposalsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProposalsParam.Merge(m, src)
}
func (m *ListProposalsParam) XXX_Size() int {
	return xxx_messageInfo_ListProposalsParam.Size(m)
}
func (m *ListProposalsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProposalsParam.DiscardUnknown(m)
}

var xxx_messageInfo_ListProposalsParam proto.InternalMessageInfo

func (m *ListProposalsParam) GetProposed() bool {
	if m != nil {
		return m.Proposed
	}
	return false
}

func (*ListProposalsParam) XXX_MessageName() string {
	return "rpcquery.ListProposalsParam"
}

type ProposalResult struct {
	Hash                 []byte          `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Ballot               *payload.Ballot `protobuf:"bytes,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProposalResult) Reset()         { *m = ProposalResult{} }
func (m *ProposalResult) String() string { return proto.CompactTextString(m) }
func (*ProposalResult) ProtoMessage()    {}
func (*ProposalResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{18}
}
func (m *ProposalResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalResult.Unmarshal(m, b)
}
func (m *ProposalResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalResult.Marshal(b, m, deterministic)
}
func (m *ProposalResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalResult.Merge(m, src)
}
func (m *ProposalResult) XXX_Size() int {
	return xxx_messageInfo_ProposalResult.Size(m)
}
func (m *ProposalResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalResult proto.InternalMessageInfo

func (m *ProposalResult) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *ProposalResult) GetBallot() *payload.Ballot {
	if m != nil {
		return m.Ballot
	}
	return nil
}

func (*ProposalResult) XXX_MessageName() string {
	return "rpcquery.ProposalResult"
}

type GetStatsParam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsParam) Reset()         { *m = GetStatsParam{} }
func (m *GetStatsParam) String() string { return proto.CompactTextString(m) }
func (*GetStatsParam) ProtoMessage()    {}
func (*GetStatsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{19}
}
func (m *GetStatsParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsParam.Unmarshal(m, b)
}
func (m *GetStatsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsParam.Marshal(b, m, deterministic)
}
func (m *GetStatsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsParam.Merge(m, src)
}
func (m *GetStatsParam) XXX_Size() int {
	return xxx_messageInfo_GetStatsParam.Size(m)
}
func (m *GetStatsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsParam proto.InternalMessageInfo

func (*GetStatsParam) XXX_MessageName() string {
	return "rpcquery.GetStatsParam"
}

type Stats struct {
	AccountsWithCode     uint64   `protobuf:"varint,1,opt,name=AccountsWithCode,proto3" json:"AccountsWithCode,omitempty"`
	AccountsWithoutCode  uint64   `protobuf:"varint,2,opt,name=AccountsWithoutCode,proto3" json:"AccountsWithoutCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{20}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetAccountsWithCode() uint64 {
	if m != nil {
		return m.AccountsWithCode
	}
	return 0
}

func (m *Stats) GetAccountsWithoutCode() uint64 {
	if m != nil {
		return m.AccountsWithoutCode
	}
	return 0
}

func (*Stats) XXX_MessageName() string {
	return "rpcquery.Stats"
}

type GetTendermintBlockHeaderParam struct {
	Height               int64    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTendermintBlockHeaderParam) Reset()         { *m = GetTendermintBlockHeaderParam{} }
func (m *GetTendermintBlockHeaderParam) String() string { return proto.CompactTextString(m) }
func (*GetTendermintBlockHeaderParam) ProtoMessage()    {}
func (*GetTendermintBlockHeaderParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{21}
}
func (m *GetTendermintBlockHeaderParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTendermintBlockHeaderParam.Unmarshal(m, b)
}
func (m *GetTendermintBlockHeaderParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTendermintBlockHeaderParam.Marshal(b, m, deterministic)
}
func (m *GetTendermintBlockHeaderParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTendermintBlockHeaderParam.Merge(m, src)
}
func (m *GetTendermintBlockHeaderParam) XXX_Size() int {
	return xxx_messageInfo_GetTendermintBlockHeaderParam.Size(m)
}
func (m *GetTendermintBlockHeaderParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTendermintBlockHeaderParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetTendermintBlockHeaderParam proto.InternalMessageInfo

func (m *GetTendermintBlockHeaderParam) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (*GetTendermintBlockHeaderParam) XXX_MessageName() string {
	return "rpcquery.GetTendermintBlockHeaderParam"
}

type GetTendermintValidatorSetParam struct {
	Height               int64    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTendermintValidatorSetParam) Reset()         { *m = GetTendermintValidatorSetParam{} }
func (m *GetTendermintValidatorSetParam) String() string { return proto.CompactTextString(m) }
func (*GetTendermintValidatorSetParam) ProtoMessage()    {}
func (*GetTendermintValidatorSetParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{22}
}
func (m *GetTendermintValidatorSetParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTendermintValidatorSetParam.Unmarshal(m, b)
}
func (m *GetTendermintValidatorSetParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTendermintValidatorSetParam.Marshal(b, m, deterministic)
}
func (m *GetTendermintValidatorSetParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTendermintValidatorSetParam.Merge(m, src)
}
func (m *GetTendermintValidatorSetParam) XXX_Size() int {
	return xxx_messageInfo_GetTendermintValidatorSetParam.Size(m)
}
func (m *GetTendermintValidatorSetParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTendermintValidatorSetParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetTendermintValidatorSetParam proto.InternalMessageInfo

func (m *GetTendermintValidatorSetParam) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (*GetTendermintValidatorSetParam) XXX_MessageName() string {
	return "rpcquery.GetTendermintValidatorSetParam"
}

type TendermintBlockHeader struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=Header,proto3,customtype=Header" json:"Header,omitempty"`
	Commit               *Commit  `protobuf:"bytes,2,opt,name=Commit,proto3,customtype=Commit" json:"Commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TendermintBlockHeader) Reset()         { *m = TendermintBlockHeader{} }
func (m *TendermintBlockHeader) String() string { return proto.CompactTextString(m) }
func (*TendermintBlockHeader) ProtoMessage()    {}
func (*TendermintBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{23}
}
func (m *TendermintBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TendermintBlockHeader.Unmarshal(m, b)
}
func (m *TendermintBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TendermintBlockHeader.Marshal(b, m, deterministic)
}
func (m *TendermintBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TendermintBlockHeader.Merge(m, src)
}
func (m *TendermintBlockHeader) XXX_Size() int {
	return xxx_messageInfo_TendermintBlockHeader.Size(m)
}
func (m *TendermintBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_TendermintBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_TendermintBlockHeader proto.InternalMessageInfo

func (*TendermintBlockHeader) XXX_MessageName() string {
	return "rpcquery.TendermintBlockHeader"
}

type TendermintValidatorSet struct {
	Set                  *Validators `protobuf:"bytes,1,opt,name=Set,proto3,customtype=Validators" json:"Set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TendermintValidatorSet) Reset()         { *m = TendermintValidatorSet{} }
func (m *TendermintValidatorSet) String() string { return proto.CompactTextString(m) }
func (*TendermintValidatorSet) ProtoMessage()    {}
func (*TendermintValidatorSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_88e25d9b99e39f02, []int{24}
}
func (m *TendermintValidatorSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TendermintValidatorSet.Unmarshal(m, b)
}
func (m *TendermintValidatorSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TendermintValidatorSet.Marshal(b, m, deterministic)
}
func (m *TendermintValidatorSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TendermintValidatorSet.Merge(m, src)
}
func (m *TendermintValidatorSet) XXX_Size() int {
	return xxx_messageInfo_TendermintValidatorSet.Size(m)
}
func (m *TendermintValidatorSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TendermintValidatorSet.DiscardUnknown(m)
}

var xxx_messageInfo_TendermintValidatorSet proto.InternalMessageInfo

func (*TendermintValidatorSet) XXX_MessageName() string {
	return "rpcquery.TendermintValidatorSet"
}
func init() {
	proto.RegisterType((*StatusParam)(nil), "rpcquery.StatusParam")
	golang_proto.RegisterType((*StatusParam)(nil), "rpcquery.StatusParam")
	proto.RegisterType((*GetAccountParam)(nil), "rpcquery.GetAccountParam")
	golang_proto.RegisterType((*GetAccountParam)(nil), "rpcquery.GetAccountParam")
	proto.RegisterType((*GetMetadataParam)(nil), "rpcquery.GetMetadataParam")
	golang_proto.RegisterType((*GetMetadataParam)(nil), "rpcquery.GetMetadataParam")
	proto.RegisterType((*MetadataResult)(nil), "rpcquery.MetadataResult")
	golang_proto.RegisterType((*MetadataResult)(nil), "rpcquery.MetadataResult")
	proto.RegisterType((*GetStorageParam)(nil), "rpcquery.GetStorageParam")
	golang_proto.RegisterType((*GetStorageParam)(nil), "rpcquery.GetStorageParam")
	proto.RegisterType((*StorageValue)(nil), "rpcquery.StorageValue")
	golang_proto.RegisterType((*StorageValue)(nil), "rpcquery.StorageValue")
	proto.RegisterType((*ListAccountsParam)(nil), "rpcquery.ListAccountsParam")
	golang_proto.RegisterType((*ListAccountsParam)(nil), "rpcquery.ListAccountsParam")
	proto.RegisterType((*GetNameParam)(nil), "rpcquery.GetNameParam")
	golang_proto.RegisterType((*GetNameParam)(nil), "rpcquery.GetNameParam")
	proto.RegisterType((*ListNamesParam)(nil), "rpcquery.ListNamesParam")
	golang_proto.RegisterType((*ListNamesParam)(nil), "rpcquery.ListNamesParam")
	proto.RegisterType((*GetNetworkRegistryParam)(nil), "rpcquery.GetNetworkRegistryParam")
	golang_proto.RegisterType((*GetNetworkRegistryParam)(nil), "rpcquery.GetNetworkRegistryParam")
	proto.RegisterType((*GetValidatorSetParam)(nil), "rpcquery.GetValidatorSetParam")
	golang_proto.RegisterType((*GetValidatorSetParam)(nil), "rpcquery.GetValidatorSetParam")
	proto.RegisterType((*GetValidatorSetHistoryParam)(nil), "rpcquery.GetValidatorSetHistoryParam")
	golang_proto.RegisterType((*GetValidatorSetHistoryParam)(nil), "rpcquery.GetValidatorSetHistoryParam")
	proto.RegisterType((*NetworkRegistry)(nil), "rpcquery.NetworkRegistry")
	golang_proto.RegisterType((*NetworkRegistry)(nil), "rpcquery.NetworkRegistry")
	proto.RegisterType((*RegisteredValidator)(nil), "rpcquery.RegisteredValidator")
	golang_proto.RegisterType((*RegisteredValidator)(nil), "rpcquery.RegisteredValidator")
	proto.RegisterType((*ValidatorSetHistory)(nil), "rpcquery.ValidatorSetHistory")
	golang_proto.RegisterType((*ValidatorSetHistory)(nil), "rpcquery.ValidatorSetHistory")
	proto.RegisterType((*ValidatorSet)(nil), "rpcquery.ValidatorSet")
	golang_proto.RegisterType((*ValidatorSet)(nil), "rpcquery.ValidatorSet")
	proto.RegisterType((*GetProposalParam)(nil), "rpcquery.GetProposalParam")
	golang_proto.RegisterType((*GetProposalParam)(nil), "rpcquery.GetProposalParam")
	proto.RegisterType((*ListProposalsParam)(nil), "rpcquery.ListProposalsParam")
	golang_proto.RegisterType((*ListProposalsParam)(nil), "rpcquery.ListProposalsParam")
	proto.RegisterType((*ProposalResult)(nil), "rpcquery.ProposalResult")
	golang_proto.RegisterType((*ProposalResult)(nil), "rpcquery.ProposalResult")
	proto.RegisterType((*GetStatsParam)(nil), "rpcquery.GetStatsParam")
	golang_proto.RegisterType((*GetStatsParam)(nil), "rpcquery.GetStatsParam")
	proto.RegisterType((*Stats)(nil), "rpcquery.Stats")
	golang_proto.RegisterType((*Stats)(nil), "rpcquery.Stats")
	proto.RegisterType((*GetTendermintBlockHeaderParam)(nil), "rpcquery.GetTendermintBlockHeaderParam")
	golang_proto.RegisterType((*GetTendermintBlockHeaderParam)(nil), "rpcquery.GetTendermintBlockHeaderParam")
	proto.RegisterType((*GetTendermintValidatorSetParam)(nil), "rpcquery.GetTendermintValidatorSetParam")
	golang_proto.RegisterType((*GetTendermintValidatorSetParam)(nil), "rpcquery.GetTendermintValidatorSetParam")
	proto.RegisterType((*TendermintBlockHeader)(nil), "rpcquery.TendermintBlockHeader")
	golang_proto.RegisterType((*TendermintBlockHeader)(nil), "rpcquery.TendermintBlockHeader")
	proto.RegisterType((*TendermintValidatorSet)(nil), "rpcquery.TendermintValidatorSet")
	golang_proto.RegisterType((*TendermintValidatorSet)(nil), "rpcquery.TendermintValidatorSet")
}

func init() { proto.RegisterFile("rpcquery.proto", fileDescriptor_88e25d9b99e39f02) }
func init() { golang_proto.RegisterFile("rpcquery.proto", fileDescriptor_88e25d9b99e39f02) }

var fileDescriptor_88e25d9b99e39f02 = []byte{
	// 1140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xef, 0x6e, 0x1b, 0x45,
	0x10, 0xe7, 0x9a, 0xd4, 0x71, 0x26, 0x8e, 0xdd, 0x6e, 0x52, 0x37, 0xb9, 0x12, 0x3b, 0xac, 0x44,
	0x1a, 0xa2, 0xf6, 0x6c, 0x42, 0x43, 0x51, 0x41, 0x42, 0x75, 0x04, 0x4e, 0x28, 0x8d, 0xc2, 0xa5,
	0xb4, 0x12, 0x48, 0xa0, 0xf5, 0xdd, 0x62, 0x9f, 0x6a, 0x7b, 0xcd, 0xde, 0x5e, 0x8b, 0x1f, 0x83,
	0xb7, 0x80, 0x07, 0xe0, 0x3b, 0x1f, 0xfb, 0x08, 0x28, 0x1f, 0x22, 0xd4, 0xbe, 0x08, 0xba, 0xbd,
	0xdd, 0xfb, 0xe7, 0x73, 0x04, 0x08, 0xbe, 0x24, 0x33, 0xb3, 0x33, 0xbf, 0xb9, 0x9d, 0x9d, 0xf9,
	0x8d, 0xa1, 0xca, 0x27, 0xce, 0x8f, 0x01, 0xe5, 0x53, 0x6b, 0xc2, 0x99, 0x60, 0xa8, 0xac, 0x75,
	0xf3, 0x6e, 0xdf, 0x13, 0x83, 0xa0, 0x67, 0x39, 0x6c, 0xd4, 0xea, 0xb3, 0x3e, 0x6b, 0x49, 0x87,
	0x5e, 0xf0, 0x83, 0xd4, 0xa4, 0x22, 0xa5, 0x28, 0xd0, 0xbc, 0x9f, 0x72, 0x17, 0x74, 0xec, 0x52,
	0x3e, 0xf2, 0xc6, 0x22, 0x2d, 0x92, 0x9e, 0xe3, 0xb5, 0xc4, 0x74, 0x42, 0xfd, 0xe8, 0xaf, 0x0a,
	0x5c, 0x19, 0x93, 0x51, 0xac, 0x2c, 0x13, 0x67, 0xa4, 0xc4, 0xda, 0x0b, 0x32, 0xf4, 0x5c, 0x22,
	0x18, 0x57, 0x86, 0x2a, 0xa7, 0x7d, 0xcf, 0x17, 0xfa, 0x53, 0xcd, 0x65, 0x3e, 0x71, 0x94, 0xb8,
	0x3a, 0x21, 0xd3, 0x21, 0x23, 0x6e, 0xa4, 0x62, 0x0f, 0x56, 0xce, 0x04, 0x11, 0x81, 0x7f, 0x4a,
	0x38, 0x19, 0xa1, 0x5d, 0xa8, 0x75, 0x86, 0xcc, 0x79, 0xfe, 0xc4, 0x1b, 0xd1, 0x67, 0x9e, 0x18,
	0x78, 0xe3, 0x0d, 0x63, 0xdb, 0xd8, 0x5d, 0xb6, 0xf3, 0x66, 0xd4, 0x86, 0x35, 0x69, 0x3a, 0xa3,
	0x74, 0x9c, 0xf2, 0xbe, 0x22, 0xbd, 0x8b, 0x8e, 0x30, 0x81, 0x5a, 0x97, 0x8a, 0x87, 0x8e, 0xc3,
	0x82, 0xb1, 0x88, 0xd2, 0x9d, 0xc0, 0xd2, 0x43, 0xd7, 0xe5, 0xd4, 0xf7, 0x65, 0x9a, 0x4a, 0xe7,
	0xde, 0xab, 0x8b, 0xe6, 0x5b, 0xe7, 0x17, 0xcd, 0x3b, 0xa9, 0x12, 0x0d, 0xa6, 0x13, 0xca, 0x87,
	0xd4, 0xed, 0x53, 0xde, 0xea, 0x05, 0x9c, 0xb3, 0x97, 0x2d, 0x87, 0x4f, 0x27, 0x82, 0x59, 0x2a,
	0xd6, 0xd6, 0x20, 0xf8, 0x37, 0x03, 0xae, 0x75, 0xa9, 0x78, 0x4c, 0x05, 0x71, 0x89, 0x20, 0x51,
	0x92, 0x2f, 0xf2, 0x49, 0xda, 0xff, 0x3a, 0x01, 0xfa, 0x1a, 0x2a, 0x1a, 0xfc, 0x88, 0xf8, 0x03,
	0x79, 0xdd, 0x4a, 0xe7, 0xfd, 0xf3, 0x8b, 0xe6, 0xdd, 0xcb, 0x01, 0x7b, 0xde, 0x98, 0xf0, 0xa9,
	0x75, 0x44, 0x7f, 0xea, 0x4c, 0x05, 0xf5, 0xed, 0x0c, 0x0c, 0xbe, 0x03, 0x55, 0xad, 0xdb, 0xd4,
	0x0f, 0x86, 0x02, 0x99, 0x50, 0xd6, 0x16, 0xf5, 0x02, 0xb1, 0x8e, 0x7f, 0x35, 0x64, 0x25, 0xcf,
	0x04, 0xe3, 0xa4, 0x4f, 0xff, 0x97, 0x4a, 0xa2, 0xcf, 0x61, 0xe1, 0x11, 0x9d, 0xaa, 0xfb, 0xfd,
	0x4d, 0x2c, 0x75, 0xc7, 0x67, 0x8c, 0xbb, 0xfb, 0x07, 0x1f, 0xda, 0x21, 0x00, 0xfe, 0x16, 0x2a,
	0xea, 0x3b, 0x9f, 0x92, 0x61, 0x40, 0xd1, 0x23, 0xb8, 0x2a, 0x05, 0xf5, 0x95, 0x07, 0x0a, 0xf9,
	0x1f, 0x56, 0x2f, 0xc2, 0xc0, 0xef, 0xc1, 0xf5, 0x2f, 0x3d, 0x5f, 0xb7, 0x94, 0x6a, 0xe1, 0x75,
	0xb8, 0xfa, 0x55, 0x38, 0x95, 0xaa, 0x6c, 0x91, 0x82, 0x31, 0x54, 0xba, 0x54, 0x9c, 0x90, 0x91,
	0xaa, 0x17, 0x82, 0xc5, 0x50, 0x51, 0x4e, 0x52, 0xc6, 0x3b, 0x50, 0x0d, 0xe1, 0x42, 0xf9, 0x52,
	0xac, 0x4d, 0xb8, 0x19, 0x62, 0x51, 0xf1, 0x92, 0xf1, 0xe7, 0xb6, 0x9a, 0x34, 0x19, 0x80, 0xeb,
	0xb0, 0xde, 0xa5, 0xe2, 0xa9, 0x1e, 0xc7, 0x33, 0x1a, 0x35, 0x3a, 0xee, 0xc2, 0xad, 0x9c, 0xfd,
	0xc8, 0xf3, 0x05, 0x53, 0x61, 0xe1, 0xd8, 0x1d, 0x8f, 0x9d, 0x61, 0xe0, 0xd2, 0x53, 0x4e, 0x5f,
	0x78, 0x2c, 0x88, 0x5e, 0x71, 0xc1, 0xce, 0x9b, 0x71, 0x07, 0x6a, 0xb9, 0xc4, 0xa8, 0x05, 0x0b,
	0x67, 0x54, 0x6c, 0x18, 0xdb, 0x0b, 0xbb, 0x2b, 0xfb, 0x5b, 0x56, 0xcc, 0x52, 0x91, 0x03, 0xe5,
	0xd4, 0x8d, 0xf3, 0xda, 0xa1, 0x27, 0xfe, 0xd9, 0x80, 0xb5, 0x82, 0xc3, 0xff, 0xbc, 0x87, 0xf6,
	0x60, 0xf1, 0x84, 0xb9, 0x54, 0x36, 0xd1, 0xca, 0x7e, 0xdd, 0x8a, 0x49, 0x29, 0xb4, 0x1e, 0xbb,
	0x74, 0x2c, 0x3c, 0x31, 0xb5, 0xa5, 0x0f, 0xee, 0xc2, 0x5a, 0x41, 0x75, 0x50, 0x1b, 0x96, 0x94,
	0xa8, 0xee, 0x57, 0x4f, 0xee, 0x97, 0xf6, 0xb7, 0xb5, 0x1b, 0x3e, 0x81, 0x4a, 0xfa, 0x00, 0xd5,
	0xa1, 0x34, 0xa0, 0x5e, 0x7f, 0x20, 0xe4, 0x9d, 0x16, 0x6d, 0xa5, 0xa1, 0x9d, 0xa8, 0x6a, 0x57,
	0x24, 0xea, 0xba, 0x95, 0x30, 0x68, 0xae, 0x58, 0x3b, 0x92, 0x51, 0x4e, 0x39, 0x9b, 0x30, 0x9f,
	0x0c, 0xe3, 0xe6, 0x91, 0xd3, 0x2f, 0xab, 0x64, 0x4b, 0x19, 0xb7, 0x01, 0x85, 0xcd, 0xa3, 0x1d,
	0x55, 0x03, 0x99, 0x50, 0x8e, 0x2c, 0xd4, 0x95, 0xde, 0x65, 0x3b, 0xd6, 0xf1, 0x63, 0xa8, 0x6a,
	0x6f, 0x35, 0xf4, 0x05, 0xb8, 0xe8, 0x36, 0x94, 0x3a, 0x64, 0x38, 0x64, 0x42, 0x95, 0xb1, 0x66,
	0x69, 0x02, 0x8f, 0xcc, 0xb6, 0x3a, 0xc6, 0x35, 0x58, 0x95, 0xa4, 0x40, 0xd4, 0x20, 0x60, 0x0a,
	0x57, 0xa5, 0x86, 0xf6, 0xe0, 0x9a, 0x1e, 0x91, 0x90, 0x8a, 0x0f, 0xc3, 0x37, 0x89, 0x8a, 0x31,
	0x63, 0x0f, 0x69, 0x3d, 0x6d, 0x63, 0x81, 0x38, 0xd4, 0x4f, 0xb8, 0x68, 0x17, 0x1d, 0xe1, 0xfb,
	0xb0, 0xd5, 0xa5, 0xe2, 0x49, 0xbc, 0xbc, 0x24, 0xf5, 0x1f, 0x51, 0xe2, 0x52, 0x1e, 0xd5, 0xa0,
	0x0e, 0xa5, 0xa3, 0xe4, 0x05, 0x16, 0x6c, 0xa5, 0xe1, 0x8f, 0xa0, 0x91, 0x09, 0x9c, 0x99, 0x9a,
	0xb9, 0x91, 0xdf, 0xc3, 0x8d, 0xc2, 0x7c, 0x08, 0x87, 0x01, 0xa1, 0xa4, 0x1a, 0x18, 0xce, 0x2f,
	0x9a, 0xca, 0x62, 0x97, 0x12, 0x9f, 0x43, 0x36, 0x1a, 0x79, 0x42, 0x91, 0x9b, 0xf4, 0x89, 0x2c,
	0xb6, 0xfa, 0x8f, 0x1f, 0x40, 0xbd, 0xf8, 0xbb, 0xd0, 0xb6, 0x1e, 0xb6, 0x30, 0xb4, 0x7a, 0x7e,
	0xd1, 0x84, 0xf8, 0xd8, 0x97, 0x0d, 0xb3, 0xff, 0x4b, 0x59, 0x91, 0x06, 0xda, 0x87, 0x52, 0xb4,
	0x5b, 0xd1, 0x8d, 0xa4, 0x6b, 0x53, 0xdb, 0xd6, 0xbc, 0x1e, 0x9a, 0xad, 0xe8, 0xf1, 0x95, 0xe7,
	0x01, 0x40, 0xb2, 0x24, 0xd1, 0x66, 0x12, 0x97, 0x5b, 0x9d, 0x66, 0xc5, 0x0a, 0xf7, 0xbf, 0x76,
	0x3c, 0x84, 0x95, 0xd4, 0xde, 0x43, 0x66, 0x26, 0x2e, 0xb3, 0x0e, 0xcd, 0x8d, 0xe4, 0x2c, 0xb7,
	0x73, 0x3e, 0x95, 0xb9, 0x15, 0x5d, 0xe7, 0x72, 0xa7, 0x97, 0x8d, 0x59, 0x4f, 0x5f, 0x27, 0x45,
	0xee, 0x1f, 0x43, 0x25, 0xcd, 0xc7, 0xe8, 0x56, 0xe2, 0x37, 0xc3, 0xd3, 0xd9, 0x0b, 0xb4, 0x0d,
	0xd4, 0x82, 0x25, 0xc5, 0xd0, 0xa8, 0x9e, 0x49, 0x1d, 0x93, 0xb6, 0x59, 0xb1, 0xa2, 0x1f, 0x40,
	0x9f, 0x8d, 0x43, 0xde, 0x3b, 0x80, 0xe5, 0x98, 0xae, 0xd1, 0x46, 0x36, 0x55, 0xc2, 0xe1, 0xd9,
	0xa0, 0xb6, 0x81, 0x6c, 0x40, 0xb3, 0xec, 0x8d, 0xde, 0xc9, 0xa6, 0x2c, 0xe0, 0x76, 0x33, 0x55,
	0x90, 0x7c, 0xf4, 0xb1, 0x5c, 0xc8, 0x99, 0x46, 0x69, 0x64, 0x00, 0x67, 0x7a, 0xdb, 0x9c, 0x43,
	0x64, 0xe8, 0x3b, 0xa8, 0x17, 0x6f, 0x0a, 0xf4, 0xee, 0x5c, 0xc4, 0xf4, 0x2e, 0x31, 0xb7, 0x8a,
	0x81, 0x35, 0xca, 0x03, 0xd9, 0x29, 0x9a, 0x78, 0x72, 0x9d, 0x92, 0xa1, 0x39, 0x33, 0x4f, 0x35,
	0xe8, 0x18, 0x56, 0x33, 0x1c, 0x87, 0xde, 0xce, 0x56, 0x3d, 0x4b, 0x7e, 0xe9, 0x4e, 0xcb, 0x12,
	0x5d, 0xdb, 0x40, 0xf7, 0xa0, 0xac, 0xd9, 0x0a, 0xdd, 0xcc, 0x75, 0x9a, 0x66, 0x30, 0xb3, 0x96,
	0x1d, 0x1b, 0x1f, 0xb9, 0xb0, 0x31, 0x8f, 0x6b, 0xd0, 0xed, 0x0c, 0xca, 0x7c, 0x3e, 0x32, 0x9b,
	0x89, 0x63, 0x31, 0x52, 0x1f, 0x36, 0xe7, 0x12, 0x13, 0xda, 0x9d, 0x93, 0x66, 0xf6, 0x85, 0xb7,
	0x8b, 0xf2, 0xa4, 0xdd, 0x3a, 0x9f, 0xfc, 0xf1, 0xba, 0x61, 0xfc, 0xf9, 0xba, 0x61, 0xfc, 0xfe,
	0xa6, 0x61, 0xbc, 0x7a, 0xd3, 0x30, 0xbe, 0xd9, 0xbb, 0x7c, 0xd3, 0xf2, 0x89, 0xd3, 0xd2, 0xa0,
	0xbd, 0x92, 0xfc, 0x05, 0xff, 0xc1, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x13, 0x09, 0x8e, 0x7c,
	0x98, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	Status(ctx context.Context, in *StatusParam, opts ...grpc.CallOption) (*rpc.ResultStatus, error)
	GetAccount(ctx context.Context, in *GetAccountParam, opts ...grpc.CallOption) (*acm.Account, error)
	GetMetadata(ctx context.Context, in *GetMetadataParam, opts ...grpc.CallOption) (*MetadataResult, error)
	GetStorage(ctx context.Context, in *GetStorageParam, opts ...grpc.CallOption) (*StorageValue, error)
	ListAccounts(ctx context.Context, in *ListAccountsParam, opts ...grpc.CallOption) (Query_ListAccountsClient, error)
	GetName(ctx context.Context, in *GetNameParam, opts ...grpc.CallOption) (*names.Entry, error)
	ListNames(ctx context.Context, in *ListNamesParam, opts ...grpc.CallOption) (Query_ListNamesClient, error)
	// GetNetworkRegistry returns for each validator address, the list of their identified node at the current state
	GetNetworkRegistry(ctx context.Context, in *GetNetworkRegistryParam, opts ...grpc.CallOption) (*NetworkRegistry, error)
	GetValidatorSet(ctx context.Context, in *GetValidatorSetParam, opts ...grpc.CallOption) (*ValidatorSet, error)
	GetValidatorSetHistory(ctx context.Context, in *GetValidatorSetHistoryParam, opts ...grpc.CallOption) (*ValidatorSetHistory, error)
	GetProposal(ctx context.Context, in *GetProposalParam, opts ...grpc.CallOption) (*payload.Ballot, error)
	ListProposals(ctx context.Context, in *ListProposalsParam, opts ...grpc.CallOption) (Query_ListProposalsClient, error)
	GetStats(ctx context.Context, in *GetStatsParam, opts ...grpc.CallOption) (*Stats, error)
	GetTendermintBlockHeader(ctx context.Context, in *GetTendermintBlockHeaderParam, opts ...grpc.CallOption) (*TendermintBlockHeader, error)
	GetTendermintValidatorSet(ctx context.Context, in *GetTendermintValidatorSetParam, opts ...grpc.CallOption) (*TendermintValidatorSet, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Status(ctx context.Context, in *StatusParam, opts ...grpc.CallOption) (*rpc.ResultStatus, error) {
	out := new(rpc.ResultStatus)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccount(ctx context.Context, in *GetAccountParam, opts ...grpc.CallOption) (*acm.Account, error) {
	out := new(acm.Account)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetMetadata(ctx context.Context, in *GetMetadataParam, opts ...grpc.CallOption) (*MetadataResult, error) {
	out := new(MetadataResult)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetStorage(ctx context.Context, in *GetStorageParam, opts ...grpc.CallOption) (*StorageValue, error) {
	out := new(StorageValue)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListAccounts(ctx context.Context, in *ListAccountsParam, opts ...grpc.CallOption) (Query_ListAccountsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Query_serviceDesc.Streams[0], "/rpcquery.Query/ListAccounts", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryListAccountsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Query_ListAccountsClient interface {
	Recv() (*acm.Account, error)
	grpc.ClientStream
}

type queryListAccountsClient struct {
	grpc.ClientStream
}

func (x *queryListAccountsClient) Recv() (*acm.Account, error) {
	m := new(acm.Account)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryClient) GetName(ctx context.Context, in *GetNameParam, opts ...grpc.CallOption) (*names.Entry, error) {
	out := new(names.Entry)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListNames(ctx context.Context, in *ListNamesParam, opts ...grpc.CallOption) (Query_ListNamesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Query_serviceDesc.Streams[1], "/rpcquery.Query/ListNames", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryListNamesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Query_ListNamesClient interface {
	Recv() (*names.Entry, error)
	grpc.ClientStream
}

type queryListNamesClient struct {
	grpc.ClientStream
}

func (x *queryListNamesClient) Recv() (*names.Entry, error) {
	m := new(names.Entry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryClient) GetNetworkRegistry(ctx context.Context, in *GetNetworkRegistryParam, opts ...grpc.CallOption) (*NetworkRegistry, error) {
	out := new(NetworkRegistry)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetNetworkRegistry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetValidatorSet(ctx context.Context, in *GetValidatorSetParam, opts ...grpc.CallOption) (*ValidatorSet, error) {
	out := new(ValidatorSet)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetValidatorSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetValidatorSetHistory(ctx context.Context, in *GetValidatorSetHistoryParam, opts ...grpc.CallOption) (*ValidatorSetHistory, error) {
	out := new(ValidatorSetHistory)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetValidatorSetHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetProposal(ctx context.Context, in *GetProposalParam, opts ...grpc.CallOption) (*payload.Ballot, error) {
	out := new(payload.Ballot)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListProposals(ctx context.Context, in *ListProposalsParam, opts ...grpc.CallOption) (Query_ListProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Query_serviceDesc.Streams[2], "/rpcquery.Query/ListProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryListProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Query_ListProposalsClient interface {
	Recv() (*ProposalResult, error)
	grpc.ClientStream
}

type queryListProposalsClient struct {
	grpc.ClientStream
}

func (x *queryListProposalsClient) Recv() (*ProposalResult, error) {
	m := new(ProposalResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queryClient) GetStats(ctx context.Context, in *GetStatsParam, opts ...grpc.CallOption) (*Stats, error) {
	out := new(Stats)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetTendermintBlockHeader(ctx context.Context, in *GetTendermintBlockHeaderParam, opts ...grpc.CallOption) (*TendermintBlockHeader, error) {
	out := new(TendermintBlockHeader)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetTendermintBlockHeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetTendermintValidatorSet(ctx context.Context, in *GetTendermintValidatorSetParam, opts ...grpc.CallOption) (*TendermintValidatorSet, error) {
	out := new(TendermintValidatorSet)
	err := c.cc.Invoke(ctx, "/rpcquery.Query/GetTendermintValidatorSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	Status(context.Context, *StatusParam) (*rpc.ResultStatus, error)
	GetAccount(context.Context, *GetAccountParam) (*acm.Account, error)
	GetMetadata(context.Context, *GetMetadataParam) (*MetadataResult, error)
	GetStorage(context.Context, *GetStorageParam) (*StorageValue, error)
	ListAccounts(*ListAccountsParam, Query_ListAccountsServer) error
	GetName(context.Context, *GetNameParam) (*names.Entry, error)
	ListNames(*ListNamesParam, Query_ListNamesServer) error
	// GetNetworkRegistry returns for each validator address, the list of their identified node at the current state
	GetNetworkRegistry(context.Context, *GetNetworkRegistryParam) (*NetworkRegistry, error)
	GetValidatorSet(context.Context, *GetValidatorSetParam) (*ValidatorSet, error)
	GetValidatorSetHistory(context.Context, *GetValidatorSetHistoryParam) (*ValidatorSetHistory, error)
	GetProposal(context.Context, *GetProposalParam) (*payload.Ballot, error)
	ListProposals(*ListProposalsParam, Query_ListProposalsServer) error
	GetStats(context.Context, *GetStatsParam) (*Stats, error)
	GetTendermintBlockHeader(context.Context, *GetTendermintBlockHeaderParam) (*TendermintBlockHeader, error)
	GetTendermintValidatorSet(context.Context, *GetTendermintValidatorSetParam) (*TendermintValidatorSet, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Status(ctx context.Context, req *StatusParam) (*rpc.ResultStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedQueryServer) GetAccount(ctx context.Context, req *GetAccountParam) (*acm.Account, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedQueryServer) GetMetadata(ctx context.Context, req *GetMetadataParam) (*MetadataResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetadata not implemented")
}
func (*UnimplementedQueryServer) GetStorage(ctx context.Context, req *GetStorageParam) (*StorageValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorage not implemented")
}
func (*UnimplementedQueryServer) ListAccounts(req *ListAccountsParam, srv Query_ListAccountsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAccounts not implemented")
}
func (*UnimplementedQueryServer) GetName(ctx context.Context, req *GetNameParam) (*names.Entry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetName not implemented")
}
func (*UnimplementedQueryServer) ListNames(req *ListNamesParam, srv Query_ListNamesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListNames not implemented")
}
func (*UnimplementedQueryServer) GetNetworkRegistry(ctx context.Context, req *GetNetworkRegistryParam) (*NetworkRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetworkRegistry not implemented")
}
func (*UnimplementedQueryServer) GetValidatorSet(ctx context.Context, req *GetValidatorSetParam) (*ValidatorSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorSet not implemented")
}
func (*UnimplementedQueryServer) GetValidatorSetHistory(ctx context.Context, req *GetValidatorSetHistoryParam) (*ValidatorSetHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorSetHistory not implemented")
}
func (*UnimplementedQueryServer) GetProposal(ctx context.Context, req *GetProposalParam) (*payload.Ballot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProposal not implemented")
}
func (*UnimplementedQueryServer) ListProposals(req *ListProposalsParam, srv Query_ListProposalsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListProposals not implemented")
}
func (*UnimplementedQueryServer) GetStats(ctx context.Context, req *GetStatsParam) (*Stats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}
func (*UnimplementedQueryServer) GetTendermintBlockHeader(ctx context.Context, req *GetTendermintBlockHeaderParam) (*TendermintBlockHeader, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTendermintBlockHeader not implemented")
}
func (*UnimplementedQueryServer) GetTendermintValidatorSet(ctx context.Context, req *GetTendermintValidatorSetParam) (*TendermintValidatorSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTendermintValidatorSet not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Status(ctx, req.(*StatusParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccount(ctx, req.(*GetAccountParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetadataParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetMetadata(ctx, req.(*GetMetadataParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStorageParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetStorage(ctx, req.(*GetStorageParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListAccounts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListAccountsParam)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServer).ListAccounts(m, &queryListAccountsServer{stream})
}

type Query_ListAccountsServer interface {
	Send(*acm.Account) error
	grpc.ServerStream
}

type queryListAccountsServer struct {
	grpc.ServerStream
}

func (x *queryListAccountsServer) Send(m *acm.Account) error {
	return x.ServerStream.SendMsg(m)
}

func _Query_GetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNameParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetName(ctx, req.(*GetNameParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListNames_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListNamesParam)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServer).ListNames(m, &queryListNamesServer{stream})
}

type Query_ListNamesServer interface {
	Send(*names.Entry) error
	grpc.ServerStream
}

type queryListNamesServer struct {
	grpc.ServerStream
}

func (x *queryListNamesServer) Send(m *names.Entry) error {
	return x.ServerStream.SendMsg(m)
}

func _Query_GetNetworkRegistry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkRegistryParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetNetworkRegistry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetNetworkRegistry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetNetworkRegistry(ctx, req.(*GetNetworkRegistryParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetValidatorSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorSetParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetValidatorSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetValidatorSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetValidatorSet(ctx, req.(*GetValidatorSetParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetValidatorSetHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorSetHistoryParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetValidatorSetHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetValidatorSetHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetValidatorSetHistory(ctx, req.(*GetValidatorSetHistoryParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposalParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetProposal(ctx, req.(*GetProposalParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListProposalsParam)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServer).ListProposals(m, &queryListProposalsServer{stream})
}

type Query_ListProposalsServer interface {
	Send(*ProposalResult) error
	grpc.ServerStream
}

type queryListProposalsServer struct {
	grpc.ServerStream
}

func (x *queryListProposalsServer) Send(m *ProposalResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Query_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetStats(ctx, req.(*GetStatsParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetTendermintBlockHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTendermintBlockHeaderParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetTendermintBlockHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetTendermintBlockHeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetTendermintBlockHeader(ctx, req.(*GetTendermintBlockHeaderParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetTendermintValidatorSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTendermintValidatorSetParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetTendermintValidatorSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcquery.Query/GetTendermintValidatorSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetTendermintValidatorSet(ctx, req.(*GetTendermintValidatorSetParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcquery.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Query_Status_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Query_GetAccount_Handler,
		},
		{
			MethodName: "GetMetadata",
			Handler:    _Query_GetMetadata_Handler,
		},
		{
			MethodName: "GetStorage",
			Handler:    _Query_GetStorage_Handler,
		},
		{
			MethodName: "GetName",
			Handler:    _Query_GetName_Handler,
		},
		{
			MethodName: "GetNetworkRegistry",
			Handler:    _Query_GetNetworkRegistry_Handler,
		},
		{
			MethodName: "GetValidatorSet",
			Handler:    _Query_GetValidatorSet_Handler,
		},
		{
			MethodName: "GetValidatorSetHistory",
			Handler:    _Query_GetValidatorSetHistory_Handler,
		},
		{
			MethodName: "GetProposal",
			Handler:    _Query_GetProposal_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Query_GetStats_Handler,
		},
		{
			MethodName: "GetTendermintBlockHeader",
			Handler:    _Query_GetTendermintBlockHeader_Handler,
		},
		{
			MethodName: "GetTendermintValidatorSet",
			Handler:    _Query_GetTendermintValidatorSet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListAccounts",
			Handler:       _Query_ListAccounts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListNames",
			Handler:       _Query_ListNames_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListProposals",
			Handler:       _Query_ListProposals_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpcquery.proto",
}

func (m *StatusParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BlockTimeWithin)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	l = len(m.BlockSeenTimeWithin)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAccountParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Address.Size()
	n += 1 + l + sovRpcquery(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMetadataParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.MetadataHash != nil {
		l = m.MetadataHash.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetStorageParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Address.Size()
	n += 1 + l + sovRpcquery(uint64(l))
	l = m.Key.Size()
	n += 1 + l + sovRpcquery(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Value.Size()
	n += 1 + l + sovRpcquery(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAccountsParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetNameParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListNamesParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetNetworkRegistryParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetValidatorSetParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetValidatorSetHistoryParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IncludePrevious != 0 {
		n += 1 + sovRpcquery(uint64(m.IncludePrevious))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkRegistry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Set) > 0 {
		for _, e := range m.Set {
			l = e.Size()
			n += 1 + l + sovRpcquery(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisteredValidator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Address.Size()
	n += 1 + l + sovRpcquery(uint64(l))
	if m.Node != nil {
		l = m.Node.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidatorSetHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.History) > 0 {
		for _, e := range m.History {
			l = e.Size()
			n += 1 + l + sovRpcquery(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidatorSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovRpcquery(uint64(m.Height))
	}
	if len(m.Set) > 0 {
		for _, e := range m.Set {
			l = e.Size()
			n += 1 + l + sovRpcquery(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProposalParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListProposalsParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Proposed {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProposalResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.Ballot != nil {
		l = m.Ballot.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetStatsParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Stats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountsWithCode != 0 {
		n += 1 + sovRpcquery(uint64(m.AccountsWithCode))
	}
	if m.AccountsWithoutCode != 0 {
		n += 1 + sovRpcquery(uint64(m.AccountsWithoutCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTendermintBlockHeaderParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovRpcquery(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTendermintValidatorSetParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovRpcquery(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TendermintBlockHeader) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.Commit != nil {
		l = m.Commit.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TendermintValidatorSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Set != nil {
		l = m.Set.Size()
		n += 1 + l + sovRpcquery(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpcquery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRpcquery(x uint64) (n int) {
	return sovRpcquery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
