# Some resuable sections, note the top-level keys 'defaults' and 'tag_filters'
# have no special meaning, they just exist so I can alias them and import them
# in later blocks
defaults: &defaults
  working_directory: /go/src/github.com/hyperledger/burrow
  docker:
    - image: circleci/golang:1.9.3

tag_filters: &tags_filters
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

setup_docker: &setup_docker
  version: 17.06.1-ce

# Start of CircleCI 2.0 config
version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: make test
      # In case we miss compile errors not pulled into test paths
      - run: make build

  test_integration:
    <<: *defaults
    steps:
      - checkout
      - run: sudo apt-get install libgmp3-dev
      - run: make test_integration

  test_integration_bosmarmot:
    <<: *defaults
    steps:
      - checkout
      - run: make test_integration_bosmarmot

  ensure_vendor:
    <<: *defaults
    steps:
      - checkout
      - run: make ensure_vendor

  build_docker:
    <<: *defaults
    steps:
      - checkout
        # This allows us to perform our docker builds
      - setup_remote_docker:
          <<: *setup_docker
        # build docker image and tag the docker image(s) depending on branch/tag
      - run: make build_docker_db
      - run: docker save quay.io/monax/db > db-images.tar
      - persist_to_workspace:
          root: .
          paths:
            - .

  # Simple smoke test to ensure burrow binary has been provisioned to container
  test_docker_smoke:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          <<: *setup_docker
      - run: docker load -i db-images.tar
      - run: docker run quay.io/monax/db:$(./scripts/local_version.sh) burrow -h

  push_docker:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          <<: *setup_docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
      - run: docker load -i db-images.tar
      - run: docker push quay.io/monax/db


workflows:
  version: 2

  test_and_release:
    jobs:
      - test:
          filters:
            <<: *tags_filters

      - test_integration:
          filters:
            <<: *tags_filters

      - test_integration_bosmarmot:
          filters:
            <<: *tags_filters

      - ensure_vendor:
          filters:
            <<: *tags_filters

      - build_docker:
          filters:
            <<: *tags_filters

      - test_docker_smoke:
          requires:
            - build_docker
          filters:
            <<: *tags_filters

      - push_docker:
          requires:
            - test
            - test_integration
            - test_integration_bosmarmot
            - test_docker_smoke
          filters:
            # tags filters and branch filters are applied disjunctively, so we
            # will still build tags not on develop (i.e. including tagged
            # releases on master that we specifically want to build)
            <<: *tags_filters
            branches:
              only: develop

